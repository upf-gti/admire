{"version":3,"sources":["../node_modules/react-overlays/esm/DropdownContext.js","../node_modules/react-bootstrap/esm/NavContext.js","../node_modules/react-bootstrap/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/NavbarContext.js","../node_modules/react-overlays/esm/DropdownMenu.js","../node_modules/react-bootstrap/esm/useWrappedRefWithWarning.js","../node_modules/@restart/hooks/esm/useForceUpdate.js","../node_modules/react-bootstrap/esm/ButtonGroup.js","../node_modules/dom-helpers/esm/matches.js","../node_modules/@restart/hooks/esm/useGlobalListener.js","../node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/react-overlays/esm/DropdownToggle.js","../node_modules/react-overlays/esm/Dropdown.js","../node_modules/react-bootstrap/esm/DropdownItem.js","../node_modules/react-bootstrap/esm/DropdownToggle.js","../node_modules/react-bootstrap/esm/Dropdown.js","../node_modules/react-bootstrap/esm/SplitButton.js","../node_modules/react-bootstrap/esm/SelectableContext.js"],"names":["DropdownContext","React","createContext","NavContext","displayName","_excluded","alignDirection","PropTypes","oneOf","alignPropType","oneOfType","shape","sm","md","lg","xl","DropdownMenu","forwardRef","_ref","ref","bsPrefix","className","align","alignRight","rootCloseEvent","flip","showProps","show","renderOnMount","_ref$as","as","Component","popperConfig","props","_objectWithoutPropertiesLoose","isNavbar","useContext","NavbarContext","prefix","useBootstrapPrefix","_usePopperMarginModif","usePopperMarginModifiers","popperRef","marginModifiers","alignClasses","keys","Object","length","brkPoint","direction","push","_useDropdownMenu","useDropdownMenu","alignEnd","usePopper","_extends","modifiers","concat","menuProps","_useDropdownMenu$","hasShown","popper","toggle","useMergedRefs","useWrappedRefWithWarning","close","style","placement","createElement","classNames","apply","defaultProps","context","noop","options","_useCallbackRef","useCallbackRef","arrowElement","attachArrowRef","hasShownRef","useRef","_options","offset","_options$fixed","fixed","_options$popperConfig","_options$usePopper","shouldUsePopper","current","drop","setMenu","menuElement","toggleElement","mergeOptionsWithPopperConfig","enabled","enableEvents","id","attributes","styles","metadata","arrowProps","arrow","useRootClose","e","clickTrigger","disabled","propTypes","children","func","isRequired","bool","object","string","_ref2","meta","Fragment","componentName","useForceUpdate","useReducer","state","ButtonGroup","size","vertical","rest","baseClass","role","matchesImpl","useGlobalListener","event","handler","capture","eventTarget","listener","useEventCallback","useEffect","target","addEventListener","removeEventListener","useEventListener","useCallback","document","useDropdownToggle","_ref$show","_ref$toggle","setToggle","handleClick","onClick","DropdownToggle","_useDropdownToggle","node","focusFirstItemOnShow","itemSelector","defaultShow","onToggle","useRefWithUpdate","forceUpdate","attachRef","element","Dropdown","rawShow","rawOnToggle","_ref$itemSelector","_useUncontrolledProp","useUncontrolledProp","_useRefWithUpdate","menuRef","_useRefWithUpdate2","toggleRef","lastShow","usePrevious","lastSourceEvent","focusInDropdown","nextShow","useMemo","contains","activeElement","focusToggle","focus","maybeFocusFirst","type","focusType","selector","body","nativeMatch","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","n","s","call","test","first","qsa","getNextFocusedChild","items","index","indexOf","Math","max","min","_menuRef$current","_toggleRef$current","key","fromMenu","fromToggle","tagName","next","preventDefault","_next","_menuRef$current2","once","stopPropagation","Provider","value","Menu","Toggle","SafeAnchor","DropdownItem","eventKey","href","onSelect","propActive","active","onSelectCtx","SelectableContext","activeKey","makeEventKey","split","childBsPrefix","Button","undefined","toggleProps","DropdownHeader","createWithBsPrefix","DropdownDivider","DropdownItemText","pProps","_useUncontrolled","useUncontrolled","_useUncontrolled$as","navbar","handleToggle","source","currentTarget","handleSelect","BaseDropdown","Divider","Header","Item","ItemText","any","toggleLabel","title","menuAlign","menuRole","renderMenuOnMount","variant","SplitButton","toString","String"],"mappings":"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","file":"static/js/3.a1c142d6.chunk.js","sourcesContent":["import React from 'react';\nvar DropdownContext = /*#__PURE__*/React.createContext(null);\nexport default DropdownContext;","import React from 'react'; // TODO: check this\n\nvar NavContext = /*#__PURE__*/React.createContext(null);\nNavContext.displayName = 'NavContext';\nexport default NavContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"align\", \"alignRight\", \"rootCloseEvent\", \"flip\", \"show\", \"renderOnMount\", \"as\", \"popperConfig\"];\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport { useDropdownMenu } from 'react-overlays/DropdownMenu';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport warning from 'warning';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport usePopperMarginModifiers from './usePopperMarginModifiers';\nvar alignDirection = PropTypes.oneOf(['left', 'right']);\nexport var alignPropType = PropTypes.oneOfType([alignDirection, PropTypes.shape({\n  sm: alignDirection\n}), PropTypes.shape({\n  md: alignDirection\n}), PropTypes.shape({\n  lg: alignDirection\n}), PropTypes.shape({\n  xl: alignDirection\n})]);\nvar defaultProps = {\n  align: 'left',\n  alignRight: false,\n  flip: true\n};\nvar DropdownMenu = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      align = _ref.align,\n      alignRight = _ref.alignRight,\n      rootCloseEvent = _ref.rootCloseEvent,\n      flip = _ref.flip,\n      showProps = _ref.show,\n      renderOnMount = _ref.renderOnMount,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      popperConfig = _ref.popperConfig,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n\n  var _usePopperMarginModif = usePopperMarginModifiers(),\n      popperRef = _usePopperMarginModif[0],\n      marginModifiers = _usePopperMarginModif[1];\n\n  var alignClasses = [];\n\n  if (align) {\n    if (typeof align === 'object') {\n      var keys = Object.keys(align);\n      process.env.NODE_ENV !== \"production\" ? warning(keys.length === 1, 'There should only be 1 breakpoint when passing an object to `align`') : void 0;\n\n      if (keys.length) {\n        var brkPoint = keys[0];\n        var direction = align[brkPoint]; // .dropdown-menu-right is required for responsively aligning\n        // left in addition to align left classes.\n        // Reuse alignRight to toggle the class below.\n\n        alignRight = direction === 'left';\n        alignClasses.push(prefix + \"-\" + brkPoint + \"-\" + direction);\n      }\n    } else if (align === 'right') {\n      alignRight = true;\n    }\n  }\n\n  var _useDropdownMenu = useDropdownMenu({\n    flip: flip,\n    rootCloseEvent: rootCloseEvent,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar && alignClasses.length === 0,\n    popperConfig: _extends({}, popperConfig, {\n      modifiers: marginModifiers.concat((popperConfig == null ? void 0 : popperConfig.modifiers) || [])\n    })\n  }),\n      menuProps = _useDropdownMenu[0],\n      _useDropdownMenu$ = _useDropdownMenu[1],\n      hasShown = _useDropdownMenu$.hasShown,\n      popper = _useDropdownMenu$.popper,\n      show = _useDropdownMenu$.show,\n      alignEnd = _useDropdownMenu$.alignEnd,\n      toggle = _useDropdownMenu$.toggle;\n\n  menuProps.ref = useMergedRefs(popperRef, useMergedRefs(useWrappedRefWithWarning(ref, 'DropdownMenu'), menuProps.ref));\n  if (!hasShown && !renderOnMount) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n\n    menuProps.close = function () {\n      return toggle == null ? void 0 : toggle(false);\n    };\n\n    menuProps.alignRight = alignEnd;\n  }\n\n  var style = props.style;\n\n  if (popper != null && popper.placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = _extends({}, props.style, menuProps.style);\n    props['x-placement'] = popper.placement;\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, menuProps, {\n    style: style,\n    className: classNames.apply(void 0, [className, prefix, show && 'show', alignEnd && prefix + \"-right\"].concat(alignClasses))\n  }));\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","import React from 'react'; // TODO: check\n\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'NavbarContext';\nexport default context;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React, { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper from './usePopper';\nimport useRootClose from './useRootClose';\nimport mergeOptionsWithPopperConfig from './mergeOptionsWithPopperConfig';\n\nvar noop = function noop() {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {[number, number]} options.offset Define an offset distance between the Menu and the Toggle\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      offset = _options.offset,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$fixed = _options.fixed,\n      fixed = _options$fixed === void 0 ? false : _options$fixed,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? !!context : _options$usePopper;\n  var show = (context == null ? void 0 : context.show) == null ? !!options.show : context.show;\n  var alignEnd = (context == null ? void 0 : context.alignEnd) == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  var _ref = context || {},\n      drop = _ref.drop,\n      setMenu = _ref.setMenu,\n      menuElement = _ref.menuElement,\n      toggleElement = _ref.toggleElement;\n\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n  var popper = usePopper(toggleElement, menuElement, mergeOptionsWithPopperConfig({\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    enableEvents: show,\n    offset: offset,\n    flip: flip,\n    fixed: fixed,\n    arrowElement: arrowElement,\n    popperConfig: popperConfig\n  }));\n\n  var menuProps = _extends({\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  }, popper.attributes.popper, {\n    style: popper.styles.popper\n  });\n\n  var metadata = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    toggle: context == null ? void 0 : context.toggle,\n    popper: shouldUsePopper ? popper : null,\n    arrowProps: shouldUsePopper ? _extends({\n      ref: attachArrowRef\n    }, popper.attributes.arrow, {\n      style: popper.styles.arrow\n    }) : {}\n  };\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !show\n  });\n  return [menuProps, metadata];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   update: () => void,\n   *   forceUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref2) {\n  var children = _ref2.children,\n      options = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n  var _useDropdownMenu = useDropdownMenu(options),\n      props = _useDropdownMenu[0],\n      meta = _useDropdownMenu[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, meta.hasShown ? children(props, meta) : null);\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import invariant from 'invariant';\nimport { useCallback } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nexport default function useWrappedRefWithWarning(ref, componentName) {\n  // @ts-ignore\n  if (!(process.env.NODE_ENV !== \"production\")) return ref; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  var warningRef = useCallback(function (refValue) {\n    !(refValue == null || !refValue.isReactComponent) ? process.env.NODE_ENV !== \"production\" ? invariant(false, componentName + \" injected a ref to a provided `as` component that resolved to a component instance instead of a DOM element. \" + 'Use `React.forwardRef` to provide the injected ref to the class component as a prop in order to pass it directly to a DOM element') : invariant(false) : void 0;\n  }, [componentName]); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  return useMergedRefs(warningRef, ref);\n}","import { useReducer } from 'react';\n/**\n * Returns a function that triggers a component update. the hook equivalent to\n * `this.forceUpdate()` in a class component. In most cases using a state value directly\n * is preferable but may be required in some advanced usages of refs for interop or\n * when direct DOM manipulation is required.\n *\n * ```ts\n * const forceUpdate = useForceUpdate();\n *\n * const updateOnClick = useCallback(() => {\n *  forceUpdate()\n * }, [forceUpdate])\n *\n * return <button type=\"button\" onClick={updateOnClick}>Hi there</button>\n * ```\n */\n\nexport default function useForceUpdate() {\n  // The toggling state value is designed to defeat React optimizations for skipping\n  // updates when they are stricting equal to the last state value\n  var _useReducer = useReducer(function (state) {\n    return !state;\n  }, false),\n      dispatch = _useReducer[1];\n\n  return dispatch;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"size\", \"toggle\", \"vertical\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  vertical: false,\n  toggle: false,\n  role: 'group'\n};\nvar ButtonGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      toggle = _ref.toggle,\n      vertical = _ref.vertical,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  var baseClass = prefix;\n  if (vertical) baseClass = prefix + \"-vertical\";\n  return /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classNames(className, baseClass, size && prefix + \"-\" + size, toggle && prefix + \"-toggle\")\n  }));\n});\nButtonGroup.displayName = 'ButtonGroup';\nButtonGroup.defaultProps = defaultProps;\nexport default ButtonGroup;","var matchesImpl;\n/**\n * Checks if a given element matches a selector.\n * \n * @param node the element\n * @param selector the selector\n */\n\nexport default function matches(node, selector) {\n  if (!matchesImpl) {\n    var body = document.body;\n    var nativeMatch = body.matches || body.matchesSelector || body.webkitMatchesSelector || body.mozMatchesSelector || body.msMatchesSelector;\n\n    matchesImpl = function matchesImpl(n, s) {\n      return nativeMatch.call(n, s);\n    };\n  }\n\n  return matchesImpl(node, selector);\n}","import useEventListener from './useEventListener';\nimport { useCallback } from 'react';\n\n/**\n * Attaches an event handler outside directly to the `document`,\n * bypassing the react synthetic event system.\n *\n * ```ts\n * useGlobalListener('keydown', (event) => {\n *  console.log(event.key)\n * })\n * ```\n *\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useGlobalListener(event, handler, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var documentTarget = useCallback(function () {\n    return document;\n  }, []);\n  return useEventListener(documentTarget, event, handler, capture);\n}","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","import PropTypes from 'prop-types';\nimport React, { useContext, useCallback } from 'react';\nimport DropdownContext from './DropdownContext';\n\nvar noop = function noop() {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\n\nexport function useDropdownToggle() {\n  var _ref = useContext(DropdownContext) || {},\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? false : _ref$show,\n      _ref$toggle = _ref.toggle,\n      toggle = _ref$toggle === void 0 ? noop : _ref$toggle,\n      setToggle = _ref.setToggle;\n\n  var handleClick = useCallback(function (e) {\n    toggle(!show, e);\n  }, [show, toggle]);\n  return [{\n    ref: setToggle || noop,\n    onClick: handleClick,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Toggle element. The `props`\n   * argument should spread through to **a component that can accept a ref**. Use\n   * the `onToggle` argument to toggle the menu open or closed\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   toggle: (show: boolean) => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     aria-haspopup: true\n   *     aria-expanded: boolean\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired\n};\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle(_ref2) {\n  var children = _ref2.children;\n\n  var _useDropdownToggle = useDropdownToggle(),\n      props = _useDropdownToggle[0],\n      meta = _useDropdownToggle[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children(props, meta));\n}\n\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;","import matches from 'dom-helpers/matches';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport React, { useCallback, useRef, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useGlobalListener from '@restart/hooks/useGlobalListener';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nvar propTypes = {\n  /**\n   * A render prop that returns the root dropdown element. The `props`\n   * argument should spread through to an element containing _both_ the\n   * menu and toggle in order to handle keyboard events for focus management.\n   *\n   * @type {Function ({\n   *   props: {\n   *     onKeyDown: (SyntheticEvent) => void,\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.node,\n\n  /**\n   * Determines the direction and location of the Menu in relation to it's Toggle.\n   */\n  drop: PropTypes.oneOf(['up', 'left', 'right', 'down']),\n\n  /**\n   * Controls the focus behavior for when the Dropdown is opened. Set to\n   * `true` to always focus the first menu item, `keyboard` to focus only when\n   * navigating via the keyboard, or `false` to disable completely\n   *\n   * The Default behavior is `false` **unless** the Menu has a `role=\"menu\"`\n   * where it will default to `keyboard` to match the recommended [ARIA Authoring practices](https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton).\n   */\n  focusFirstItemOnShow: PropTypes.oneOf([false, true, 'keyboard']),\n\n  /**\n   * A css slector string that will return __focusable__ menu items.\n   * Selectors should be relative to the menu component:\n   * e.g. ` > li:not('.disabled')`\n   */\n  itemSelector: PropTypes.string,\n\n  /**\n   * Align the menu to the 'end' side of the placement side of the Dropdown toggle. The default placement is `top-start` or `bottom-start`.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Whether or not the Dropdown is visible.\n   *\n   * @controllable onToggle\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Sets the initial show position of the Dropdown.\n   */\n  defaultShow: PropTypes.bool,\n\n  /**\n   * A callback fired when the Dropdown wishes to change visibility. Called with the requested\n   * `show` value, the DOM event, and the source that fired it: `'click'`,`'keydown'`,`'rootClose'`, or `'select'`.\n   *\n   * ```ts static\n   * function(\n   *   isOpen: boolean,\n   *   event: SyntheticEvent,\n   * ): void\n   * ```\n   *\n   * @controllable show\n   */\n  onToggle: PropTypes.func\n};\n\nfunction useRefWithUpdate() {\n  var forceUpdate = useForceUpdate();\n  var ref = useRef(null);\n  var attachRef = useCallback(function (element) {\n    ref.current = element; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  return [ref, attachRef];\n}\n/**\n * @displayName Dropdown\n * @public\n */\n\n\nfunction Dropdown(_ref) {\n  var drop = _ref.drop,\n      alignEnd = _ref.alignEnd,\n      defaultShow = _ref.defaultShow,\n      rawShow = _ref.show,\n      rawOnToggle = _ref.onToggle,\n      _ref$itemSelector = _ref.itemSelector,\n      itemSelector = _ref$itemSelector === void 0 ? '* > *' : _ref$itemSelector,\n      focusFirstItemOnShow = _ref.focusFirstItemOnShow,\n      children = _ref.children;\n\n  var _useUncontrolledProp = useUncontrolledProp(rawShow, defaultShow, rawOnToggle),\n      show = _useUncontrolledProp[0],\n      onToggle = _useUncontrolledProp[1]; // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n\n  var _useRefWithUpdate = useRefWithUpdate(),\n      menuRef = _useRefWithUpdate[0],\n      setMenu = _useRefWithUpdate[1];\n\n  var menuElement = menuRef.current;\n\n  var _useRefWithUpdate2 = useRefWithUpdate(),\n      toggleRef = _useRefWithUpdate2[0],\n      setToggle = _useRefWithUpdate2[1];\n\n  var toggleElement = toggleRef.current;\n  var lastShow = usePrevious(show);\n  var lastSourceEvent = useRef(null);\n  var focusInDropdown = useRef(false);\n  var toggle = useCallback(function (nextShow, event) {\n    onToggle(nextShow, event);\n  }, [onToggle]);\n  var context = useMemo(function () {\n    return {\n      toggle: toggle,\n      drop: drop,\n      show: show,\n      alignEnd: alignEnd,\n      menuElement: menuElement,\n      toggleElement: toggleElement,\n      setMenu: setMenu,\n      setToggle: setToggle\n    };\n  }, [toggle, drop, show, alignEnd, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n\n  var focusToggle = useEventCallback(function () {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  var maybeFocusFirst = useEventCallback(function () {\n    var type = lastSourceEvent.current;\n    var focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && matches(menuRef.current, '[role=menu]') ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    var first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(function () {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(function () {\n    lastSourceEvent.current = null;\n  });\n\n  var getNextFocusedChild = function getNextFocusedChild(current, offset) {\n    if (!menuRef.current) return null;\n    var items = qsa(menuRef.current, itemSelector);\n    var index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  useGlobalListener('keydown', function (event) {\n    var _menuRef$current, _toggleRef$current;\n\n    var key = event.key;\n    var target = event.target;\n    var fromMenu = (_menuRef$current = menuRef.current) == null ? void 0 : _menuRef$current.contains(target);\n    var fromToggle = (_toggleRef$current = toggleRef.current) == null ? void 0 : _toggleRef$current.contains(target); // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    var isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && fromMenu)) {\n      return;\n    }\n\n    if (!fromMenu && !fromToggle) {\n      return;\n    }\n\n    if (!menuRef.current && key === 'Tab') {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          var next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          onToggle(true, event);\n        } else {\n          var _next = getNextFocusedChild(target, 1);\n\n          if (_next && _next.focus) _next.focus();\n        }\n\n        return;\n\n      case 'Tab':\n        // on keydown the target is the element being tabbed FROM, we need that\n        // to know if this event is relevant to this dropdown (e.g. in this menu).\n        // On `keyup` the target is the element being tagged TO which we use to check\n        // if focus has left the menu\n        addEventListener(document, 'keyup', function (e) {\n          var _menuRef$current2;\n\n          if (e.key === 'Tab' && !e.target || !((_menuRef$current2 = menuRef.current) != null && _menuRef$current2.contains(e.target))) {\n            onToggle(false, event);\n          }\n        }, {\n          once: true\n        });\n        break;\n\n      case 'Escape':\n        event.preventDefault();\n        event.stopPropagation();\n        onToggle(false, event);\n        break;\n\n      default:\n    }\n  });\n  return /*#__PURE__*/React.createElement(DropdownContext.Provider, {\n    value: context\n  }, children);\n}\n\nDropdown.displayName = 'ReactOverlaysDropdown';\nDropdown.propTypes = propTypes;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"children\", \"eventKey\", \"disabled\", \"href\", \"onClick\", \"onSelect\", \"active\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport SelectableContext, { makeEventKey } from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport NavContext from './NavContext';\nimport SafeAnchor from './SafeAnchor';\nvar defaultProps = {\n  as: SafeAnchor,\n  disabled: false\n};\nvar DropdownItem = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      eventKey = _ref.eventKey,\n      disabled = _ref.disabled,\n      href = _ref.href,\n      onClick = _ref.onClick,\n      onSelect = _ref.onSelect,\n      propActive = _ref.active,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-item');\n  var onSelectCtx = useContext(SelectableContext);\n  var navContext = useContext(NavContext);\n\n  var _ref2 = navContext || {},\n      activeKey = _ref2.activeKey;\n\n  var key = makeEventKey(eventKey, href);\n  var active = propActive == null && key != null ? makeEventKey(activeKey) === key : propActive;\n  var handleClick = useEventCallback(function (event) {\n    // SafeAnchor handles the disabled case, but we handle it here\n    // for other components\n    if (disabled) return;\n    if (onClick) onClick(event);\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n  });\n  return (\n    /*#__PURE__*/\n    // \"TS2604: JSX element type 'Component' does not have any construct or call signatures.\"\n    // @ts-ignore\n    React.createElement(Component, _extends({}, props, {\n      ref: ref,\n      href: href,\n      disabled: disabled,\n      className: classNames(className, prefix, active && 'active', disabled && 'disabled'),\n      onClick: handleClick\n    }), children)\n  );\n});\nDropdownItem.displayName = 'DropdownItem';\nDropdownItem.defaultProps = defaultProps;\nexport default DropdownItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"split\", \"className\", \"childBsPrefix\", \"as\"];\nimport classNames from 'classnames';\nimport isRequiredForA11y from 'prop-types-extra/lib/isRequiredForA11y';\nimport React from 'react';\nimport { useDropdownToggle } from 'react-overlays/DropdownToggle';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar DropdownToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      split = _ref.split,\n      className = _ref.className,\n      childBsPrefix = _ref.childBsPrefix,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? Button : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n\n  var _useDropdownToggle = useDropdownToggle(),\n      toggleProps = _useDropdownToggle[0];\n\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle')); // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: classNames(className, prefix, split && prefix + \"-split\")\n  }, toggleProps, props));\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"drop\", \"show\", \"className\", \"alignRight\", \"onSelect\", \"onToggle\", \"focusFirstItemOnShow\", \"as\", \"navbar\"];\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport BaseDropdown from 'react-overlays/Dropdown';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownItem from './DropdownItem';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nimport SelectableContext from './SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nvar DropdownHeader = createWithBsPrefix('dropdown-header', {\n  defaultProps: {\n    role: 'heading'\n  }\n});\nvar DropdownDivider = createWithBsPrefix('dropdown-divider', {\n  defaultProps: {\n    role: 'separator'\n  }\n});\nvar DropdownItemText = createWithBsPrefix('dropdown-item-text', {\n  Component: 'span'\n});\nvar defaultProps = {\n  navbar: false\n};\nvar Dropdown = /*#__PURE__*/React.forwardRef(function (pProps, ref) {\n  var _useUncontrolled = useUncontrolled(pProps, {\n    show: 'onToggle'\n  }),\n      bsPrefix = _useUncontrolled.bsPrefix,\n      drop = _useUncontrolled.drop,\n      show = _useUncontrolled.show,\n      className = _useUncontrolled.className,\n      alignRight = _useUncontrolled.alignRight,\n      onSelect = _useUncontrolled.onSelect,\n      onToggle = _useUncontrolled.onToggle,\n      focusFirstItemOnShow = _useUncontrolled.focusFirstItemOnShow,\n      _useUncontrolled$as = _useUncontrolled.as,\n      Component = _useUncontrolled$as === void 0 ? 'div' : _useUncontrolled$as,\n      _4 = _useUncontrolled.navbar,\n      props = _objectWithoutPropertiesLoose(_useUncontrolled, _excluded);\n\n  var onSelectCtx = useContext(SelectableContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown');\n  var handleToggle = useEventCallback(function (nextShow, event, source) {\n    if (source === void 0) {\n      source = event.type;\n    }\n\n    if (event.currentTarget === document && (source !== 'keydown' || event.key === 'Escape')) source = 'rootClose';\n\n    if (onToggle) {\n      onToggle(nextShow, event, {\n        source: source\n      });\n    }\n  });\n  var handleSelect = useEventCallback(function (key, event) {\n    if (onSelectCtx) onSelectCtx(key, event);\n    if (onSelect) onSelect(key, event);\n    handleToggle(false, event, 'select');\n  });\n  return /*#__PURE__*/React.createElement(SelectableContext.Provider, {\n    value: handleSelect\n  }, /*#__PURE__*/React.createElement(BaseDropdown, {\n    drop: drop,\n    show: show,\n    alignEnd: alignRight,\n    onToggle: handleToggle,\n    focusFirstItemOnShow: focusFirstItemOnShow,\n    itemSelector: \".\" + prefix + \"-item:not(.disabled):not(:disabled)\"\n  }, /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, show && 'show', (!drop || drop === 'down') && prefix, drop === 'up' && 'dropup', drop === 'right' && 'dropright', drop === 'left' && 'dropleft')\n  }))));\n});\nDropdown.displayName = 'Dropdown';\nDropdown.defaultProps = defaultProps;\nDropdown.Divider = DropdownDivider;\nDropdown.Header = DropdownHeader;\nDropdown.Item = DropdownItem;\nDropdown.ItemText = DropdownItemText;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"id\", \"bsPrefix\", \"size\", \"variant\", \"title\", \"type\", \"toggleLabel\", \"children\", \"onClick\", \"href\", \"target\", \"menuAlign\", \"menuRole\", \"renderMenuOnMount\", \"rootCloseEvent\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\nimport ButtonGroup from './ButtonGroup';\nimport Dropdown from './Dropdown';\nimport { alignPropType } from './DropdownMenu';\nvar propTypes = {\n  /**\n   * An html id attribute for the Toggle button, necessary for assistive technologies, such as screen readers.\n   * @type {string|number}\n   * @required\n   */\n  id: PropTypes.any,\n\n  /**\n   * Accessible label for the toggle; the value of `title` if not specified.\n   */\n  toggleLabel: PropTypes.string,\n\n  /** An `href` passed to the non-toggle Button */\n  href: PropTypes.string,\n\n  /** An anchor `target` passed to the non-toggle Button */\n  target: PropTypes.string,\n\n  /** An `onClick` handler passed to the non-toggle Button */\n  onClick: PropTypes.func,\n\n  /** The content of the non-toggle Button.  */\n  title: PropTypes.node.isRequired,\n\n  /** A `type` passed to the non-toggle Button */\n  type: PropTypes.string,\n\n  /** Disables both Buttons  */\n  disabled: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu responsively.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   *\n   * @type {\"left\"|\"right\"|{ sm: \"left\"|\"right\" }|{ md: \"left\"|\"right\" }|{ lg: \"left\"|\"right\" }|{ xl: \"left\"|\"right\"} }\n   */\n  menuAlign: alignPropType,\n\n  /** An ARIA accessible role applied to the Menu component. When set to 'menu', The dropdown */\n  menuRole: PropTypes.string,\n\n  /** Whether to render the dropdown menu in the DOM before the first time it is shown */\n  renderMenuOnMount: PropTypes.bool,\n\n  /**\n   *  Which event when fired outside the component will cause it to be closed.\n   *\n   * _see [DropdownMenu](#dropdown-menu-props) for more details_\n   */\n  rootCloseEvent: PropTypes.string,\n\n  /** @ignore */\n  bsPrefix: PropTypes.string,\n\n  /** @ignore */\n  variant: PropTypes.string,\n\n  /** @ignore */\n  size: PropTypes.string\n};\nvar defaultProps = {\n  toggleLabel: 'Toggle dropdown',\n  type: 'button'\n};\n/**\n * A convenience component for simple or general use split button dropdowns. Renders a\n * `ButtonGroup` containing a `Button` and a `Button` toggle for the `Dropdown`. All `children`\n * are passed directly to the default `Dropdown.Menu`. This component accepts all of [`Dropdown`'s\n * props](#dropdown-props).\n *\n * _All unknown props are passed through to the `Dropdown` component._\n * The Button `variant`, `size` and `bsPrefix` props are passed to the button and toggle,\n * and menu-related props are passed to the `Dropdown.Menu`\n */\n\nvar SplitButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      variant = _ref.variant,\n      title = _ref.title,\n      type = _ref.type,\n      toggleLabel = _ref.toggleLabel,\n      children = _ref.children,\n      onClick = _ref.onClick,\n      href = _ref.href,\n      target = _ref.target,\n      menuAlign = _ref.menuAlign,\n      menuRole = _ref.menuRole,\n      renderMenuOnMount = _ref.renderMenuOnMount,\n      rootCloseEvent = _ref.rootCloseEvent,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(Dropdown, _extends({\n    ref: ref\n  }, props, {\n    as: ButtonGroup\n  }), /*#__PURE__*/React.createElement(Button, {\n    size: size,\n    variant: variant,\n    disabled: props.disabled,\n    bsPrefix: bsPrefix,\n    href: href,\n    target: target,\n    onClick: onClick,\n    type: type\n  }, title), /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n    split: true,\n    id: id ? id.toString() : undefined,\n    size: size,\n    variant: variant,\n    disabled: props.disabled,\n    childBsPrefix: bsPrefix\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sr-only\"\n  }, toggleLabel)), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n    align: menuAlign,\n    role: menuRole,\n    renderOnMount: renderMenuOnMount,\n    rootCloseEvent: rootCloseEvent\n  }, children));\n});\nSplitButton.propTypes = propTypes;\nSplitButton.defaultProps = defaultProps;\nSplitButton.displayName = 'SplitButton';\nexport default SplitButton;","import React from 'react'; // TODO (apparently this is a bare \"onSelect\"?)\n\nvar SelectableContext = /*#__PURE__*/React.createContext(null);\nexport var makeEventKey = function makeEventKey(eventKey, href) {\n  if (href === void 0) {\n    href = null;\n  }\n\n  if (eventKey != null) return String(eventKey);\n  return href || null;\n};\nexport default SelectableContext;"],"sourceRoot":""}